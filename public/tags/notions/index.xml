<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Hextra – Notions</title>
    <link>http://localhost:1313/tags/notions/</link>
    <description>Recent content in Notions on Hextra</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Thu, 26 Nov 2020 16:18:52 +0800</lastBuildDate>
    
	  <atom:link href="http://localhost:1313/tags/notions/index.xml" rel="self" type="application/rss+xml" />
    
    
      
        
      
    
    
    <item>
      <title>data_and_metadata</title>
      <link>http://localhost:1313/blog/data-and-metadata/</link>
      <pubDate>Thu, 26 Nov 2020 16:18:52 +0800</pubDate>
      
      <guid>http://localhost:1313/blog/data-and-metadata/</guid>
      <description>
        
        
        &lt;blockquote&gt;
  &lt;p&gt;具体问题具体分析，确实非常重要。用正确的思想指导行动，才可事半功倍。
现实中的客观问题有意思的地方在于：无论你选择看得见，还是选择看不见，它都在那里，关键在于有没有人去解决，解决的人有多大的决心。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;data vs metadata&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;data-vs-metadata&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#data-vs-metadata&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;blockquote&gt;
  &lt;p&gt;Metadata is &amp;ldquo;data that provides information about other data&amp;rdquo;. In other words, it is &amp;ldquo;&lt;code&gt;data about data&lt;/code&gt;&amp;rdquo;.
正如这个世上的人，无论承认与否，分为两类：统治者与被统治者。数据也不可避免的被分为两种：metadata 和 data。&lt;code&gt;数据的数据&lt;/code&gt;和&lt;code&gt;数据&lt;/code&gt;。两者相辅相成。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3&gt;physical&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;physical&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#physical&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;data  数据(被统治者)
metadata 元数据(统治者)
正如如果被统治者都没有了，那也谈不上统治者。在一个个实体确实存在的情况下，如果没有数据，那也谈不上元数据。&lt;/p&gt;
&lt;h3&gt;logical&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;logical&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#logical&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;有时没有实体的存在但是也可以在&lt;code&gt;逻辑上&lt;/code&gt;划分 data 和 Metadata 的。比如网络中的流量。仅仅是用户真正的数据吗？不，其实还有路由器之间的流量, 这部分流量对于整个网络系统的正常运行，不可缺少。&lt;/p&gt;
&lt;p&gt;The control plane is the part of a network that controls &lt;code&gt;how data is forwarded&lt;/code&gt;, while the data plane is the actual forwarding process.
那么网络流量就可以在逻辑上（也就是虚拟的）划分为：
control plane 控制平面（视为 Metadata）
data/forward plane 数据平面（视为 data）
从这个角度来理解，metadata 有控制数据的意思，控制真正的用户数据如何转发。虽然大家都是同一种事物(都是数据包)，但是又不是平等的事物。咳咳，换成人类，似乎也说得过去。&lt;/p&gt;
&lt;h3&gt;structural metadata&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;structural-metadata&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#structural-metadata&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;这种结构性的 metadata 相当于一份说明书，来说明哪一个位置的数据是什么数据。&lt;/p&gt;
&lt;h4&gt;java class format&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;java-class-format&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#java-class-format&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h4&gt;&lt;blockquote&gt;
  &lt;p&gt;Java 代码经过编译，可以的到一个 .class 文件。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h5&gt;Hello.java&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;hellojava&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#hellojava&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h5&gt;&lt;div class=&#34;hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code&#34;&gt;

&lt;div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;public&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;Hello&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;public&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;static&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;String&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;[]&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;args&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;System&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;out&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;println&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;Hello, World&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&#34;hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0&#34;&gt;
  &lt;button
    class=&#34;hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50&#34;
    title=&#34;Copy code&#34;
  &gt;
    &lt;div class=&#34;copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4&#34;&gt;&lt;/div&gt;
    &lt;div class=&#34;success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4&#34;&gt;&lt;/div&gt;
  &lt;/button&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;h5&gt;Hello.class&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;helloclass&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#helloclass&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h5&gt;&lt;div class=&#34;hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code&#34;&gt;

&lt;div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;root@aliyun:java# xxd Hello.class
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;00000000: cafe babe &lt;span class=&#34;m&#34;&gt;0000&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;0034&lt;/span&gt; 001d 0a00 &lt;span class=&#34;m&#34;&gt;0600&lt;/span&gt; 0f09  .......4........
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;00000010: &lt;span class=&#34;m&#34;&gt;0010&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;0011&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;0800&lt;/span&gt; 120a &lt;span class=&#34;m&#34;&gt;0013&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;0014&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;0700&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;1507&lt;/span&gt;  ................
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;00000020: &lt;span class=&#34;m&#34;&gt;0016&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;0100&lt;/span&gt; 063c 696e &lt;span class=&#34;m&#34;&gt;6974&lt;/span&gt; 3e01 &lt;span class=&#34;m&#34;&gt;0003&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;2829&lt;/span&gt;  .....&amp;lt;init&amp;gt;...&lt;span class=&#34;o&#34;&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;00000030: &lt;span class=&#34;m&#34;&gt;5601&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;0004&lt;/span&gt; 436f &lt;span class=&#34;m&#34;&gt;6465&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;0100&lt;/span&gt; 0f4c 696e 654e  V...Code...LineN
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;00000040: 756d &lt;span class=&#34;m&#34;&gt;6265&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;7254&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;6162&lt;/span&gt; 6c65 &lt;span class=&#34;m&#34;&gt;0100&lt;/span&gt; 046d &lt;span class=&#34;m&#34;&gt;6169&lt;/span&gt;  umberTable...mai
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;00000050: 6e01 &lt;span class=&#34;m&#34;&gt;0016&lt;/span&gt; 285b 4c6a &lt;span class=&#34;m&#34;&gt;6176&lt;/span&gt; 612f 6c61 6e67  n...&lt;span class=&#34;o&#34;&gt;([&lt;/span&gt;Ljava/lang
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;00000060: 2f53 &lt;span class=&#34;m&#34;&gt;7472&lt;/span&gt; 696e 673b &lt;span class=&#34;m&#34;&gt;2956&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;0100&lt;/span&gt; 0a53 6f75  /String&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;V...Sou
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;00000070: &lt;span class=&#34;m&#34;&gt;7263&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;6546&lt;/span&gt; 696c &lt;span class=&#34;m&#34;&gt;6501&lt;/span&gt; 000a &lt;span class=&#34;m&#34;&gt;4865&lt;/span&gt; 6c6c 6f2e  rceFile...Hello.
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;00000080: 6a61 &lt;span class=&#34;m&#34;&gt;7661&lt;/span&gt; 0c00 &lt;span class=&#34;m&#34;&gt;0700&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;0807&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;0017&lt;/span&gt; 0c00 &lt;span class=&#34;m&#34;&gt;1800&lt;/span&gt;  java............
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;00000090: &lt;span class=&#34;m&#34;&gt;1901&lt;/span&gt; 000c &lt;span class=&#34;m&#34;&gt;4865&lt;/span&gt; 6c6c 6f2c &lt;span class=&#34;m&#34;&gt;2057&lt;/span&gt; 6f72 6c64  ....Hello, World
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;000000a0: &lt;span class=&#34;m&#34;&gt;0700&lt;/span&gt; 1a0c 001b 001c &lt;span class=&#34;m&#34;&gt;0100&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;0548&lt;/span&gt; 656c 6c6f  ...........Hello
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;000000b0: &lt;span class=&#34;m&#34;&gt;0100&lt;/span&gt; 106a &lt;span class=&#34;m&#34;&gt;6176&lt;/span&gt; 612f 6c61 6e67 2f4f 626a  ...java/lang/Obj
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;000000c0: &lt;span class=&#34;m&#34;&gt;6563&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;7401&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;0010&lt;/span&gt; 6a61 &lt;span class=&#34;m&#34;&gt;7661&lt;/span&gt; 2f6c 616e 672f  ect...java/lang/
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;000000d0: &lt;span class=&#34;m&#34;&gt;5379&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;7374&lt;/span&gt; 656d &lt;span class=&#34;m&#34;&gt;0100&lt;/span&gt; 036f &lt;span class=&#34;m&#34;&gt;7574&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;0100&lt;/span&gt; 154c  System...out...L
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;000000e0: 6a61 &lt;span class=&#34;m&#34;&gt;7661&lt;/span&gt; 2f69 6f2f &lt;span class=&#34;m&#34;&gt;5072&lt;/span&gt; 696e &lt;span class=&#34;m&#34;&gt;7453&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;7472&lt;/span&gt;  java/io/PrintStr
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;000000f0: &lt;span class=&#34;m&#34;&gt;6561&lt;/span&gt; 6d3b &lt;span class=&#34;m&#34;&gt;0100&lt;/span&gt; 136a &lt;span class=&#34;m&#34;&gt;6176&lt;/span&gt; 612f 696f 2f50  eam&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;...java/io/P
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;00000100: &lt;span class=&#34;m&#34;&gt;7269&lt;/span&gt; 6e74 &lt;span class=&#34;m&#34;&gt;5374&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;7265&lt;/span&gt; 616d &lt;span class=&#34;m&#34;&gt;0100&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;0770&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;7269&lt;/span&gt;  rintStream...pri
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;00000110: 6e74 6c6e &lt;span class=&#34;m&#34;&gt;0100&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;1528&lt;/span&gt; 4c6a &lt;span class=&#34;m&#34;&gt;6176&lt;/span&gt; 612f 6c61  ntln...&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;Ljava/la
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;00000120: 6e67 2f53 &lt;span class=&#34;m&#34;&gt;7472&lt;/span&gt; 696e 673b &lt;span class=&#34;m&#34;&gt;2956&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;0021&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;0005&lt;/span&gt;  ng/String&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;V.!..
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;00000130: &lt;span class=&#34;m&#34;&gt;0006&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;0000&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;0000&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;0002&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;0001&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;0007&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;0008&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;0001&lt;/span&gt;  ................
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;00000140: &lt;span class=&#34;m&#34;&gt;0009&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;0000&lt;/span&gt; 001d &lt;span class=&#34;m&#34;&gt;0001&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;0001&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;0000&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;0005&lt;/span&gt; 2ab7  ..............*.
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;00000150: &lt;span class=&#34;m&#34;&gt;0001&lt;/span&gt; b100 &lt;span class=&#34;m&#34;&gt;0000&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;0100&lt;/span&gt; 0a00 &lt;span class=&#34;m&#34;&gt;0000&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;0600&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;0100&lt;/span&gt;  ................
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;00000160: &lt;span class=&#34;m&#34;&gt;0000&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;0100&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;0900&lt;/span&gt; 0b00 0c00 &lt;span class=&#34;m&#34;&gt;0100&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;0900&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;0000&lt;/span&gt;  ................
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;00000170: &lt;span class=&#34;m&#34;&gt;2500&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;0200&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;0100&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;0000&lt;/span&gt; 09b2 &lt;span class=&#34;m&#34;&gt;0002&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;1203&lt;/span&gt; b600  %...............
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;00000180: 04b1 &lt;span class=&#34;m&#34;&gt;0000&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;0001&lt;/span&gt; 000a &lt;span class=&#34;m&#34;&gt;0000&lt;/span&gt; 000a &lt;span class=&#34;m&#34;&gt;0002&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;0000&lt;/span&gt;  ................
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;00000190: &lt;span class=&#34;m&#34;&gt;0003&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;0008&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;0004&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;0001&lt;/span&gt; 000d &lt;span class=&#34;m&#34;&gt;0000&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;0002&lt;/span&gt; 000e  ................&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&#34;hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0&#34;&gt;
  &lt;button
    class=&#34;hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50&#34;
    title=&#34;Copy code&#34;
  &gt;
    &lt;div class=&#34;copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4&#34;&gt;&lt;/div&gt;
    &lt;div class=&#34;success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4&#34;&gt;&lt;/div&gt;
  &lt;/button&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;h4&gt;Hello.class 怎样解析的？&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;helloclass-怎样解析的&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#helloclass-%e6%80%8e%e6%a0%b7%e8%a7%a3%e6%9e%90%e7%9a%84&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h4&gt;&lt;p&gt;如果丢给我一个 .class 文件，其他啥也没有。我也看不懂。但是由于 &lt;code&gt;class file format&lt;/code&gt; 的存在，只要足够耐心，自己也可以解析出 .class 是怎样的。这里的 &lt;a href=&#34;https://docs.oracle.com/javase/specs/jvms/se8/html/jvms-4.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;class format&lt;/a&gt; 就是 Metadata。没有这个格式说明，谁也弄不明白这一堆二进制的 0 和 1 是啥意思。&lt;/p&gt;
&lt;h4&gt;IP header&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;ip-header&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#ip-header&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h4&gt;&lt;p&gt;IP 这个协议是用来将不同局域网组成互联网的。既然通信是双向的，要知道发送者的 IP，接收者的 IP，IP 包的总大小，IP Header 的大小，这个 IP 包能跨越多少路由器(&lt;a href=&#34;https://www.cloudflare.com/learning/cdn/glossary/time-to-live-ttl/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;TTL&lt;/a&gt;)，使用的 IP 协议版本，是哪一个上层协议在使用 IP 协议，IP 包是否切分了，切分后怎样组装，校验整个 IP 包在传输过程中是否发生了错误等信息。记在哪里呢？IP header，这个 IP header 就是 Metadata。这些也可理解成控制数据。&lt;/p&gt;
&lt;h4&gt;TCP header&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;tcp-header&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#tcp-header&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h4&gt;&lt;p&gt;TCP 传输层的协议。用来保证数据不丢失且按照发送顺序到达目的地。
怎样保证顺序呢？对每一个字节编号(sequence number)。
怎样保证数据不丢失呢？确认机制(ack)。
怎样找到目的地呢？一个在网络上的计算机，可能同时运行许多程序，如打开浏览器，在线听歌，在线编辑文档等等。用端口号(port number)。
同时，怎样知道接收方现在接收网络包的大小呢？用窗口(window size)。
怎样能知道网络包传输过程是否发生了错误？用校验和(checksum)。
这些信息都存在哪里了呢？TCP header 里。这就是 Metadata。也可理解成控制数据。&lt;/p&gt;
&lt;h4&gt;InnoDB row format&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;innodb-row-format&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#innodb-row-format&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h4&gt;&lt;p&gt;InnoDB 存储表是按行存储的。这只是逻辑上的说法。真正的数据存储是要落到磁盘上的。对于每一行，字段是不是空的，定长还是变长，变长字段的长度，该列的主键，这行数据是哪一个事务操作的，这些记录的相关日志都记在哪里了呢？
不错。这其实也是有相应的说明的。而且，InnoDB 提供了不同的 &lt;a href=&#34;https://mariadb.com/kb/en/innodb-row-formats-overview/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;row format&lt;/a&gt;。对用户的每一行来说，该行的 row format 就是 Metadata。当然这就是描述（或者说是控制）该行用户数据的。&lt;/p&gt;
&lt;h2&gt;Reference&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;reference&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#reference&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Metadata&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Metadata&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://dataedo.com/kb/data-glossary/what-is-metadata&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;what-is-metadata&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.cloudflare.com/learning/network-layer/what-is-the-control-plane/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;what-is-the-control-plane&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.oracle.com/javase/specs/jvms/se8/html/jvms-4.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;class file format&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://mariadb.com/kb/en/innodb-row-formats-overview/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;InnoDB-row-format&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.cloudflare.com/learning/cdn/glossary/time-to-live-ttl/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;TTL&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;

      </description>
    </item>
    
    <item>
      <title>notions_of_computer</title>
      <link>http://localhost:1313/blog/notions-of-computer/</link>
      <pubDate>Tue, 24 Nov 2020 13:25:13 +0800</pubDate>
      
      <guid>http://localhost:1313/blog/notions-of-computer/</guid>
      <description>
        
        
        &lt;h2&gt;指导思想&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;指导思想&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#%e6%8c%87%e5%af%bc%e6%80%9d%e6%83%b3&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;计算机是人发明的。由计算机组成的世界，其设计思想很明显要借鉴现实中的东西。正如一位伟人的著作开篇提出 &lt;code&gt;“谁是我们的敌人？谁是我们的朋友？这个问题是革命的首要问题。中国过去一切革命斗争成效甚少，其基本原因就是因为不能团结真正的朋友，以攻击真正的敌人。”&lt;/code&gt;那么应对计算机，什么才是计算机组织背后的指导思想呢？个人认为有三个：1. hierarchy(层级)、2：group(分组)、3：order(有序)&lt;/p&gt;
&lt;h3&gt;hierarchy(层级)&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;hierarchy层级&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#hierarchy%e5%b1%82%e7%ba%a7&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;&lt;em&gt;hierarchy&lt;/em&gt; 在这里也可以理解成等级。层级结构最重要的一点就是最顶层在哪？用 &lt;code&gt;tree&lt;/code&gt; 理解就是，&lt;code&gt;root&lt;/code&gt; 在哪？这个信息整个层级都要知道。哈哈，是不是挺像皇帝。😄&lt;/p&gt;
&lt;h4&gt;面对数量庞大的相同事物，怎样管理呢？用什么组织方式呢？&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;面对数量庞大的相同事物怎样管理呢用什么组织方式呢&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#%e9%9d%a2%e5%af%b9%e6%95%b0%e9%87%8f%e5%ba%9e%e5%a4%a7%e7%9a%84%e7%9b%b8%e5%90%8c%e4%ba%8b%e7%89%a9%e6%80%8e%e6%a0%b7%e7%ae%a1%e7%90%86%e5%91%a2%e7%94%a8%e4%bb%80%e4%b9%88%e7%bb%84%e7%bb%87%e6%96%b9%e5%bc%8f%e5%91%a2&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h4&gt;&lt;p&gt;这里的数量庞大要是成千上万的。比如中国有十几亿人口、中国有 960 万平方公里的土地，等等。首先简述一下历史上的经验，比如西周，采用分封制。天子、诸侯、卿、士、平民等所有人组成一个金字塔形状。每一个层级的人&lt;code&gt;权力大小不同&lt;/code&gt;、&lt;code&gt;承担的责任和义务也不同&lt;/code&gt;。对于土地则是封邦建国。分封制可以对人口、土地等进行有效的统治。更直观的理解就是形成稳定的阶级。到这是不是立刻就能想到由于每种存储的&lt;code&gt;价格&lt;/code&gt;、&lt;code&gt;速度&lt;/code&gt;、&lt;code&gt;容量&lt;/code&gt;不同，应用在哪个地方也不同。也是组织成一个层级结构来构成整个计算机的存储系统。&lt;/p&gt;
&lt;p&gt;从数学的角度分析就是：用&lt;code&gt;对数的方式&lt;/code&gt;搞定数量庞大的事物的管理。不管数量多庞大，用对数搞一下，数量立刻就降下来。比如 log&lt;sub&gt;2&lt;/sub&gt;4294967296 = 32。对数的发明、解析几何的创立和微积分的建立是17世纪数学的三大成就。&lt;/p&gt;
&lt;h5&gt;域名组织方式&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;域名组织方式&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#%e5%9f%9f%e5%90%8d%e7%bb%84%e7%bb%87%e6%96%b9%e5%bc%8f&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h5&gt;&lt;blockquote&gt;
  &lt;p&gt;In 2017, 330.6 million domain names had been registered.
2017 年已经有 33 多亿的注册域名了。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;如果让你组织数量如此庞大的域名，你该怎样组织呢？没错，也是组织成层级结构，来管理数量如此庞大的域名。一开始的解决方法是直接把域名信息放在 /etc/hosts 文件，随着域名增多，单独的一个文件没法满足要求，数量太多了嘛，放在一个文件，且不论能不能全部存储，查找都是一个大问题。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://github.com/stardustman/pictures/raw/main/img/dns-root-server.png&#34; alt=&#34;domain-name-hierarchy&#34; loading=&#34;lazy&#34; /&gt;&lt;/p&gt;
&lt;h5&gt;IP 分配管理方式&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;ip-分配管理方式&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#ip-%e5%88%86%e9%85%8d%e7%ae%a1%e7%90%86%e6%96%b9%e5%bc%8f&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h5&gt;&lt;p&gt;IP Addresses are &lt;code&gt;unique identifiers&lt;/code&gt; used to determine who is who on the Internet.
IP 地址是一个 32bit 的无符号整数。范围是 [0,2^32-1], 一共有 4294967296 个整数。将近 43 亿个 ip 地址(这里不考虑公网、私网)该怎样分配使用呢？由 &lt;a href=&#34;https://www.iana.org/numbers&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Internet Assigned Numbers Authority (IANA)&lt;/a&gt; 负责协调管理所有 IP，同时负责分配自治系统号(Autonomous System number)。&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;Both IPv4 and IPv6 addresses are generally assigned in a &lt;code&gt;hierarchical manner&lt;/code&gt;. Users are assigned IP addresses by &lt;code&gt;Internet service providers (ISPs)&lt;/code&gt;. ISPs obtain allocations of IP addresses from a &lt;code&gt;local Internet registry (LIR&lt;/code&gt;) or &lt;code&gt;National Internet Registry (NIR)&lt;/code&gt;, or from their appropriate &lt;code&gt;Regional Internet Registry (RIR)&lt;/code&gt;:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;数量庞大的 IP 地址怎样分配管理呢？组成层级结构。通过一级一级&lt;code&gt;委托&lt;/code&gt;，管理数量庞大的 IP 地址。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://github.com/stardustman/pictures/raw/main/img/IP_AS_Number.svg&#34; alt=&#34;地址分配管理&#34; loading=&#34;lazy&#34; /&gt;&lt;/p&gt;
&lt;h5&gt;文件组织方式&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;文件组织方式&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#%e6%96%87%e4%bb%b6%e7%bb%84%e7%bb%87%e6%96%b9%e5%bc%8f&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h5&gt;&lt;p&gt;&lt;img src=&#34;https://github.com/stardustman/pictures/raw/main/img/file_system_hierarchy.png&#34; alt=&#34;file system hierarchy&#34; loading=&#34;lazy&#34; /&gt;&lt;/p&gt;
&lt;h4&gt;不同性质的事物，怎样组织呢？&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;不同性质的事物怎样组织呢&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#%e4%b8%8d%e5%90%8c%e6%80%a7%e8%b4%a8%e7%9a%84%e4%ba%8b%e7%89%a9%e6%80%8e%e6%a0%b7%e7%bb%84%e7%bb%87%e5%91%a2&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h4&gt;&lt;h5&gt;memory hierarchy&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;memory-hierarchy&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#memory-hierarchy&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h5&gt;&lt;p&gt;&lt;img src=&#34;https://github.com/stardustman/pictures/raw/main/img/ComputerMemoryHierarchy.svg&#34; alt=&#34;ComputerMemoryHierarchy&#34; loading=&#34;lazy&#34; /&gt;&lt;/p&gt;
&lt;h5&gt;Typical memory hierarchy&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;typical-memory-hierarchy&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#typical-memory-hierarchy&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h5&gt;&lt;p&gt;&lt;img src=&#34;https://github.com/stardustman/pictures/raw/main/img/typical-memory-hierarchy.png&#34; alt=&#34; typical-memory-hierarchy &#34; loading=&#34;lazy&#34; /&gt;&lt;/p&gt;
&lt;h5&gt;OSI 参考模型&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;osi-参考模型&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#osi-%e5%8f%82%e8%80%83%e6%a8%a1%e5%9e%8b&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h5&gt;&lt;p&gt;网络每一层，功能不同。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://github.com/stardustman/pictures/raw/main/img/network-layer.svg&#34; alt=&#34;OSI VS TCP/IP&#34; loading=&#34;lazy&#34; /&gt;&lt;/p&gt;
&lt;h3&gt;group(分组)&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;group分组&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#group%e5%88%86%e7%bb%84&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;体量庞大的东西的基层组织。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;可视为层级结构的最底层。block、page、packet、fragment、set&lt;/li&gt;
&lt;li&gt;也可以视为不同的模块。module、segment、section&lt;/li&gt;
&lt;li&gt;也可以理解成分类。sort&lt;/li&gt;
&lt;/ol&gt;
&lt;h4&gt;域名&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;域名&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#%e5%9f%9f%e5%90%8d&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h4&gt;&lt;p&gt;对域名来说一个分组可以理解成一个&lt;code&gt;一级域名&lt;/code&gt;下的所有域名。如 &lt;code&gt;org&lt;/code&gt;下的域名。当然也可以理解成一个 &lt;code&gt;二级域名&lt;/code&gt;下的所有域名。如 &lt;code&gt;google.com&lt;/code&gt; 下 Google 家所有的域名。依次类推。可以看出，同种事物进行层级组织，本身就是在进行分组。&lt;/p&gt;
&lt;h4&gt;IP 地址&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;ip-地址&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#ip-%e5%9c%b0%e5%9d%80&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h4&gt;&lt;blockquote&gt;
  &lt;p&gt;An autonomous system (AS) is a very large network or group of networks with a single routing policy. Each AS is assigned a unique ASN, which is a number that identifies the AS.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;没错。IP 地址也是通过一个一个的实体来管理使用的，一个实体就是一个自治系统。(autonomous system)。比如中国移动这个运营商的 AS Number 是 &lt;a href=&#34;https://ipinfo.io/AS56041&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;56041&lt;/a&gt;，管理一系列 IP 地址。再比如 Apple 的 AS Number 是 &lt;a href=&#34;https://ipinfo.io/AS714&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;714&lt;/a&gt;。&lt;/p&gt;
&lt;h4&gt;Internet Protocol&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;internet-protocol&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#internet-protocol&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h4&gt;&lt;blockquote&gt;
  &lt;p&gt;Data traversing the Internet is &lt;code&gt;divided into&lt;/code&gt; smaller pieces, called &lt;code&gt;packets&lt;/code&gt;. IP information is attached to &lt;code&gt;each packet&lt;/code&gt;, and this information helps &lt;code&gt;routers&lt;/code&gt; to send packets to the right place.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;通过网络发送大量的信息，也是拆分成一个个 &lt;code&gt;packet&lt;/code&gt;。这里也可以理解成分组。&lt;/p&gt;
&lt;h4&gt;文件系统&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;文件系统&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#%e6%96%87%e4%bb%b6%e7%b3%bb%e7%bb%9f&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h4&gt;&lt;p&gt;文件系统管理磁盘空间。磁盘空间划分为一个个相同大小的 Block。一个扇区是 512Bytes，这可以视为一个分组。&lt;/p&gt;
&lt;h4&gt;网络流量&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;网络流量&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#%e7%bd%91%e7%bb%9c%e6%b5%81%e9%87%8f&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h4&gt;&lt;blockquote&gt;
  &lt;p&gt;Ports are virtual places within an operating system where network connections start and end. They help computers sort the &lt;code&gt;network traffic&lt;/code&gt; they receive.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;计算机从网络上接收的 packet 怎样判定哪一个是接收者呢？对网络流量分类就行。怎样分类呢？用端口号，不同的接收者，接收不同端口的流量。&lt;/p&gt;
&lt;h4&gt;subnet&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;subnet&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#subnet&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h4&gt;&lt;blockquote&gt;
  &lt;p&gt;Think of the Internet as a network of networks: computers are connected to each other within networks, and these networks connect to other networks. This enables these computers to connect with other computers both near and far.
A network is a group of two or more connected computing devices.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;划分子网，也是在分组。&lt;/p&gt;
&lt;h3&gt;order(顺序)&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;order顺序&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#order%e9%a1%ba%e5%ba%8f&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;顺序、分支、循环。顺序就是程序三大结构之一。没有秩序的世界是混乱的，啥事也做不成。
TCP 协议目的之一就是要保证计算机接收到的网络包的顺序。怎样保证顺序呢？非常简单，为每一个 Byte 编号就行。&lt;/p&gt;
&lt;h2&gt;References&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;references&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#references&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;&lt;a href=&#34;https://www.geeksforgeeks.org/memory-hierarchy-design-and-its-characteristics/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;memory-hierarchy&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.cloudflare.com/learning/dns/glossary/what-is-a-domain-name/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;what-is-a-domain-name&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.cloudflare.com/learning/dns/glossary/dns-root-server/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;dns-root-server&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.iana.org/numbers&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;ip number resources&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://tools.ietf.org/html/rfc7020&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;The Internet Numbers Registry System&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Filesystem_Hierarchy_Standard&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Filesystem_Hierarchy_Standard&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.pathname.com/fhs/2.2/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Filesystem Hierarchy Standard List&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.cloudflare.com/learning/network-layer/what-is-the-network-layer/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;network-layer&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.cloudflare.com/learning/network-layer/internet-protocol/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;internet-protocol&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.cloudflare.com/learning/network-layer/what-is-a-computer-port/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;what-is-a-computer-port&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.cloudflare.com/learning/ddos/glossary/open-systems-interconnection-model-osi/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;open-systems-interconnection-model&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://cseweb.ucsd.edu/classes/sp10/cse141/pdf/07/09_CSE141-Caching.pdf&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;CSE141-Caching&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;

      </description>
    </item>
    
  </channel>
</rss>
