<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Hextra – Call-Stack</title>
    <link>http://localhost:1313/tags/call-stack/</link>
    <description>Recent content in Call-Stack on Hextra</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Sun, 05 Dec 2021 23:24:48 +0800</lastBuildDate>
    
	  <atom:link href="http://localhost:1313/tags/call-stack/index.xml" rel="self" type="application/rss+xml" />
    
    
      
        
      
    
    
    <item>
      <title>js-eventloop</title>
      <link>http://localhost:1313/blog/js-eventloop/</link>
      <pubDate>Sun, 05 Dec 2021 23:24:48 +0800</pubDate>
      
      <guid>http://localhost:1313/blog/js-eventloop/</guid>
      <description>
        
        
        &lt;h2&gt;References&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;references&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#references&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;&lt;a href=&#34;https://www.digitalocean.com/community/tutorials/understanding-the-event-loop-callbacks-promises-and-async-await-in-javascript&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;understanding-the-event-loop-callbacks-promises-and-async-await-in-javascript&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://slidr.io/vakila/learning-functional-programming-with-javascript&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;learning-functional-programming-with-javascript&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=8aGhZQkoFbQ&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;what is event loop?js-conf&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://latentflip.com/loupe/?code=JC5vbignYnV0dG9uJywgJ2NsaWNrJywgZnVuY3Rpb24gb25DbGljaygpIHsKICAgIHNldFRpbWVvdXQoZnVuY3Rpb24gdGltZXIoKSB7CiAgICAgICAgY29uc29sZS5sb2coJ1lvdSBjbGlja2VkIHRoZSBidXR0b24hJyk7ICAgIAogICAgfSwgMjAwMCk7Cn0pOwoKY29uc29sZS5sb2coIkhpISIpOwoKc2V0VGltZW91dChmdW5jdGlvbiB0aW1lb3V0KCkgewogICAgY29uc29sZS5sb2coIkNsaWNrIHRoZSBidXR0b24hIik7Cn0sIDUwMDApOwoKY29uc29sZS5sb2coIldlbGNvbWUgdG8gbG91cGUuIik7!!!PGJ1dHRvbj5DbGljayBtZSE8L2J1dHRvbj4%3D&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;what is event loop demo&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://codewords.recurse.com/issues/one/an-introduction-to-functional-programming&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;an-introduction-to-functional-programming&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://medium.com/jspoint/how-javascript-works-in-browser-and-node-ab7d0d09ac2f&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;how-javascript-works-in-browser-and-node&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://developer.mozilla.org/en-US/docs/Web/API&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;浏览器提供 Web Apis&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;

      </description>
    </item>
    
  </channel>
</rss>
